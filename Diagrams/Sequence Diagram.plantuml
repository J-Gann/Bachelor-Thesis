@startuml

group User Selects Service Website

    Webclient -> Portal: getWebsite(HomePage)
    Portal --> Webclient: HomePage
    Webclient -> Portal: getServiceWebsiteURL(SearchTerm)
    Portal -> Portal: searchServiceWebsiteURL(SearchTerm)
    Portal --> Webclient: URL1, URL2
    User -> Webclient: Choose URL1
    Webclient -> Portal: getWebsite(URL1)
    Portal --> Webclient: ServiceWebsite

end

group Service Website Initializes New Request Template and Displays QR-Code

Webclient -> PortalConnector: getRequestTemplateQRCode(FIM-ID = FIM-1234)
PortalAdministrator -> PortalConnector: Defines RequestTemplateParamter for each\nFIM-ID on Service Websites of the Portal
PortalConnector -> PortalConnector: getRequestTemplateParameter(FIM-ID = FIM-1234)
PortalConnector --> PortalConnector: RequestTemplateParameter:\nType = AttributeRequest\nIssuer = IMP-1234\nRequestTemplateReason = Determination of Responsible Institution\nRequestedAttributes = [address]
PortalConnector -> IMPServer: createNewRequestTemplate(RequestTemplateParameter)
IMPServer -> IMPServer: initializeRequestTemplate(RequestTemplateParameter)
IMPServer --> IMPServer: RequestTemplate:\nRequestTemplateID = T-ID-1234\nRequestTemplateType = AttributeRequest\nRequestTemplateIssuer = IMP-1234\nRequestTemplateReason = Determination of Responsible Institution, \nRequestedAttributes = [address]
IMPServer --> PortalConnector: transmitRequestTemplate(IMP-ID = IMP-1234, RequestTemplate)
PortalConnector -> PortalConnector: createQRCode(RequestTemplateID)
PortalConnector --> PortalConnector: QR-Code
PortalConnector --> Webclient: QR-Code

end

group User Scans QR-Code and Starts a Request based on the Template

IMPClient -> Webclient: scanQRCode(QR-Code)
IMPClient --> IMPClient: RequestTemplateID: T-ID-1234
IMPClient -> IMPServer: createNewRequest(RequestTemplateID = T-ID-1234, IMP-ID = IMP-5678)
IMPServer -> IMPServer: initializeRequest(RequestTemplateID = T-ID-1234, IMP-ID = IMP-5678)
IMPServer --> IMPServer: Request:\nRequestID = R-ID-1234\nRequestTemplateID = T-ID-1234\nIMP-ID = IMP-5678\nStatus = None\nAttributes = None
IMPServer -> IMPClient: notifyRequestUpdate(RequestID = R-ID-1234)
IMPServer -> PortalConnector: notifyRequestUpdate(RequestID = R-ID-1234)

IMPClient -> IMPServer: getRequest(RequestID = R-ID-1234)
IMPServer --> IMPClient: transmitRequest(RequestID = R-ID-1234)
IMPClient -> IMPClient: fillInRequest(Request = R-ID-1234)
IMPClient -> IMPClient: displayRequest(Request = T-ID-1234)
User -> IMPClient: Fill in Attributes
User -> IMPClient: Approve Request

IMPClient -> IMPServer: respondRequest(IMP-ID = IMP-5678, RequestID = R-ID-1234, Response = Approve, Attributes = [Address1])
IMPServer -> IMPServer: updateRequest(RequestID = R-ID-1234, Status = OneAccept, Attributes = [Address1])
IMPServer --> IMPServer: Request:\nRequestID = R-ID-1234\nRequestTemplateID = T-ID-1234\nIMP-ID = IMP-5678\nStatus = OneAccept\nAttributes = [Address1]
IMPServer -> IMPClient: notifyRequestUpdate(RequestID = R-ID-1234)
IMPServer -> PortalConnector: notifyRequestUpdate(RequestID = R-ID-1234)

end

group The Portal Connector Accepts the Request and the IMP Server Updates the Request Status

PortalConnector -> IMPServer: getRequest(RequestID = R-ID-1234)
IMPServer -> PortalConnector: transmitRequest(IMP-ID = IMP-1234, RequestID = R-ID-1234)
PortalConnector -> PortalConnector: Decide to accept request
PortalConnector -> IMPServer: respondRequest(IMP-ID = IMP-1234, RequestID = R-ID-1234, Response = Approve)
IMPServer -> IMPServer: updateRequest(RequestID = R-ID-1234, Status = BothAccept)
IMPServer --> IMPServer: Request:\nRequestID = R-ID-1234\nRequestTemplateID = T-ID-1234\nIMP-ID = IMP-5678\nStatus = BothAccept\nAttributes = [Address1]
IMPServer -> IMPClient: notifyRequestUpdate(RequestID = R-ID-1234)
IMPServer -> PortalConnector: notifyRequestUpdate(RequestID = R-ID-1234)
IMPClient -> IMPClient: displayAcceptedRequest(RequestID = R-ID-1234)

end

group The Portal Determines the Responsible Institution for A FIM-ID and a User Location

PortalConnector -> Portal: getResponsibleInstitution(FIM-1234, [Address1])
Portal -> Portal: determineResponsibleInstitution(FIM-1234, [Address1])
Portal --> Portal: InstitutionID: I-ID-123
Portal --> PortalConnector: sendResponsibleInstitution(InstitutionID = I-ID-123)

end

group The Portal Connector submits an Empty Application to the Institution

PortalConnector -> DataExchangePlatform: submitApplication(ApplicationID = A-ID-1234, InstitutionID = I-ID-123, FIM-ID = FIM-1234, Application = None, IMP-ID = IMP-5678)
DataExchangePlatform -> DataExchangePlatform: storeApplication(ApplicationID = A-ID-1234, InstitutionID = I-ID-123, FIM-ID = FIM-1234, Application = None, IMP-ID = IMP-5678)
DataExchangePlatform -> Institution: notifyNewApplication(ApplicationID = A-ID-1234, InstitutionID = I-ID-123)
Institution -> InstitutionConnector: notifyNewApplication(ApplicationID = A-ID-1234, InstitutionID = I-ID-123)
InstitutionConnector -> DataExchangePlatform: getApplication(ApplicationID = A-ID-1234, InstitutionID = I-ID-123)
DataExchangePlatform -> InstitutionConnector: sendApplication(ApplicationID = A-ID-1234, InstitutionID = I-ID-123, FIM-ID = FIM-1234, Application = None, IMP-ID = IMP-5678)
InstitutionConnector -> InstitutionConnector: checkApplicationType(Application = None)

alt Application is not None

InstitutionConnector -> Institution: submitApplication(ApplicationID, Application)

end

end

group Institution Connector Initializes New Request Template

InstitutionAdministrator -> InstitutionConnector: Defines RequestTemplateParamter for each\nFIM-ID on the institution can recieve.\nThis especially includes the mapping of\nrequired FIM data fields to IMP attributes
InstitutionConnector -> InstitutionConnector: getRequestTemplateParameter(FIM-ID = FIM-1234)
InstitutionConnector --> InstitutionConnector: RequestTemplateParameter:\nType = AttributeRequest\nIssuer = IMP-6789\nRequestTemplateReason = Execution of Administrative Service with FIM-ID: FIM-1234\nRequestedAttributes = [Name, Age]
InstitutionConnector -> IMPServer: createNewRequestTemplate(RequestTemplateParameter)
IMPServer -> IMPServer: initializeRequestTemplate(RequestTemplateParameter)
IMPServer --> IMPServer: RequestTemplate:\nRequestTemplateID = T-ID-5678\nRequestTemplateType = AttributeRequest\nRequestTemplateIssuer = IMP-6789\nRequestTemplateReason = Execution of Administrative Service with FIM-ID: FIM-1234, \nRequestedAttributes = [Name, Age]
IMPServer --> InstitutionConnector: RequestTemplateID: T-ID-5678

end

group Institution Connector Sends Request to IMP Client

InstitutionConnector -> IMPServer: createNewRequest(RequestTemplateID = T-ID-5678, IMP-ID = IMP-5678)
IMPServer -> IMPServer: initializeRequest(RequestTemplateID = T-ID-5678, IMP-ID = IMP-5678)
IMPServer --> IMPServer: Request:\nRequestID = R-ID-5678\nRequestTemplateID = T-ID-5678\nIMP-ID = IMP-5678\nStatus = None\nAttributes = None

IMPServer -> IMPClient: notifyRequestUpdate(RequestID = R-ID-5678)
IMPServer -> InstitutionConnector: notifyRequestUpdate(RequestID = R-ID-5678)

IMPClient -> IMPServer: getRequest(RequestID = R-ID-5678)
IMPServer --> IMPClient: transmitRequest(Request, IMP-ID = IMP-5678)

end

group IMP Client Responds to Request and Submits Requested Attributes

IMPClient -> IMPClient: fillInRequest(Request)
IMPClient -> IMPClient: displayRequest(Request)
User -> IMPClient: Fill in Attributes
User -> IMPClient: Approve Request
IMPClient -> IMPServer: respondRequest(IMP-ID = IMP-5678, RequestID = R-ID-5678, Response = Approve, Attributes = [Max, 30])

end

group Institution Connector is Notified of Request and Accepts it

IMPServer -> IMPServer: updateRequest(RequestID = R-ID-5678, Status = OneApprove, Attributes = [Max, 30])
IMPServer --> IMPServer: Request:\nRequestID = R-ID-5678\nRequestTemplateID = T-ID-5678\nIMP-ID = IMP-5678\nStatus = OneApprove\nAttributes = [Max, 30]
IMPServer -> IMPClient: notifyRequestUpdate(RequestID = R-ID-5678)
IMPServer -> InstitutionConnector: notifyRequestUpdate(RequestID = R-ID-5678)
InstitutionConnector -> IMPServer: getRequest(RequestID = R-ID-5678)
IMPServer --> InstitutionConnector: transmitRequest(IMP-ID = IMP-6789, Request)
InstitutionConnector -> InstitutionConnector: Check if Request should be accpeted
InstitutionConnector -> IMPServer: respondRequest(IMP-ID = IMP-6789, RequestID = R-ID-5678, Response = Approve)

end

group IMP Server Informs both Parties of Successful Request

IMPServer -> IMPServer: updateRequest(RequestID = R-ID-5678, Status = BothApprove)
IMPServer --> IMPServer: Request:\nRequestID = R-ID-5678\nRequestTemplateID = T-ID-5678\nIMP-ID = IMP-5678\nStatus = BothApprove\nAttributes = [Max, 30]
IMPServer -> IMPClient: notifyRequestUpdate(RequestID = R-ID-5678)
IMPServer -> InstitutionConnector: notifyRequestUpdate(RequestID = R-ID-5678)
IMPClient -> IMPClient: displayAcceptedRequest(RequestID = R-ID-5678)

end

group InstitutionConnector Transmits Application to Institution

InstitutionConnector -> InstitutionConnector: Map Attributes to Data Field Schemata of initial Application
InstitutionConnector -> InstitutionConnector: Fill initial application with requested Attributes
InstitutionConnector -> Institution: Submit Application
Institution -> Institution: Process Application

end

@enduml